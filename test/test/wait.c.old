#ifdef WIN
#define WIN32_LEAN_AND_MEAN
#define NTDDI_VERSION NTDDI_VISTA
#define WINVER _WIN32_WINNT_VISTA
#define _WIN32_WINNT _WIN32_WINNT_VISTA
#endif

#include <stdio.h>
#include <stdlib.h>
#include <string.h>


#ifdef LIN
#include <arpa/inet.h>
#include <sys/socket.h>
#endif

#ifdef WIN
#include <winsock2.h>
#include <ws2tcpip.h>
#endif

#include <unistd.h>

int main(int argc, char** argv){
	
	#ifdef LIN
	int sock;
	socklen_t len = 0 ;
	#endif
	struct sockaddr_in sin, *sinbis;
	char buff[6];
	int port = 4567;
	
	struct sockaddr saddr;
	char str[INET_ADDRSTRLEN];
	
	#ifdef WIN
	WSADATA wsa;
	SOCKET sock;	
	if(0 != WSAStartup(MAKEWORD(2,2), &wsa))
		printf("Erreur d'init !\n");
	int len = 0;	
	#endif
	
	sin.sin_port = htons(port);
	sin.sin_family = AF_INET;
	sin.sin_addr.s_addr = htons(INADDR_ANY);
	len = sizeof(struct sockaddr);
	
	if(-1 == (sock = socket(AF_INET, SOCK_DGRAM, 0))){
		perror("SOCKET");
		exit(EXIT_FAILURE);
	}
	
	if(-1 == (bind(sock, (struct sockaddr*)&sin, sizeof(struct sockaddr))))
		perror("BIND");
		
	printf("Waiting for a connexion on port %d...\n", port);
		
	if(-1 == recvfrom(sock, buff, 6, 0, &saddr, &len)){
		#ifdef LIN
		perror("RECV");
		#endif
		#ifdef WIN
		printf("Receive failed with error %d\n" ,WSAGetLastError());
		#endif
	}
		
	sinbis = (struct sockaddr_in*)&saddr;
	#ifdef LIN
	inet_ntop(AF_INET, &(sinbis->sin_addr), str, INET_ADDRSTRLEN);
	#endif
	#ifdef WIN
	InetNtop(AF_INET, &(sinbis->sin_addr), str, INET_ADDRSTRLEN);
	#endif 
	
	printf("Data received from %s : %s\n",str, buff);
	
	return 0;
}
